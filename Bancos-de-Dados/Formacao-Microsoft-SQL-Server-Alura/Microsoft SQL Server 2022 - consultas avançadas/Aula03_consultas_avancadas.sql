--DISTINCT

SELECT DISTINCT EMBALAGEM FROM TABELA_DE_PRODUTOS;

SELECT DISTINCT EMBALAGEM FROM TABELA_DE_PRODUTOS WHERE SABOR = 'Maca';

SELECT DISTINCT EMBALAGEM, SABOR FROM TABELA_DE_PRODUTOS;

--DESAFIO: NÚMERO DE SABORES DIFRENTES
SELECT COUNT (DISTINCT SABOR) FROM TABELA_DE_PRODUTOS;


-- TOP

SELECT TOP 4 * FROM TABELA_DE_CLIENTES;

SELECT TOP 5 * FROM TABELA_DE_PRODUTOS WHERE SABOR = 'Maca';

--DESAFIO: 10 primeiras vendas do dia 01/10/2017
SELECT TOP 10 * FROM NOTAS_FISCAIS WHERE DATA_VENDA = '01/10/2017';


--ORDER BY

SELECT * FROM TABELA_DE_PRODUTOS ORDER BY PRECO_DE_LISTA;

--PADRÃO
SELECT * FROM TABELA_DE_PRODUTOS ORDER BY PRECO_DE_LISTA ASC;

--DECRESCENTE
SELECT * FROM TABELA_DE_PRODUTOS ORDER BY PRECO_DE_LISTA DESC;

SELECT * FROM TABELA_DE_PRODUTOS ORDER BY EMBALAGEM DESC, NOME_DO_PRODUTO DESC;

-- 5 MAIS CAROS
SELECT TOP 5 * FROM TABELA_DE_PRODUTOS ORDER BY PRECO_DE_LISTA DESC;

--DESAFIO: Qual foi a maior venda do produto "Linha Refrescante - 1 Litro - Morango/Limao" em quantidade?
SELECT * FROM TABELA_DE_PRODUTOS WHERE NOME_DO_PRODUTO = 'Linha Refrescante - 1 Litro - Morango/Limao';
SELECT TOP 1 * FROM ITENS_NOTAS_FISCAIS WHERE CODIGO_DO_PRODUTO = '1101035' ORDER BY QUANTIDADE DESC;


--GROUP BY

SELECT CIDADE, AVG(IDADE) AS [MÉDIA DE IDADE], SUM(LIMITE_DE_CREDITO) AS [SOMA LIMITE DE CREDITO] FROM TABELA_DE_CLIENTES GROUP BY CIDADE;

SELECT CIDADE, COUNT(*) AS [NÚMERO DE CLIENTES] FROM TABELA_DE_CLIENTES GROUP BY CIDADE;

SELECT EMBALAGEM, COUNT(*) AS NUMERO_DE_CLIENTES 
FROM TABELA_DE_PRODUTOS WHERE SABOR = 'Laranja' GROUP BY EMBALAGEM;

--DESAFIO: Quantas vendas foram feitas com quantidade igual a 99 litros para o produto '1101035'?
SELECT CODIGO_DO_PRODUTO, COUNT(*) AS VENDAS 
FROM ITENS_NOTAS_FISCAIS 
WHERE CODIGO_DO_PRODUTO = '1101035' AND QUANTIDADE = 99
GROUP BY CODIGO_DO_PRODUTO;


--HAVING

SELECT ESTADO, SUM(LIMITE_DE_CREDITO) AS CREDITO
FROM TABELA_DE_CLIENTES
GROUP BY ESTADO
HAVING SUM(LIMITE_DE_CREDITO) >= 900000;

SELECT EMBALAGEM, MAX(PRECO_DE_LISTA) AS PRECO_MAX, MIN(PRECO_DE_LISTA) AS PRECO_MIN 
FROM TABELA_DE_PRODUTOS 
WHERE PRECO_DE_LISTA >= 10 
GROUP BY EMBALAGEM 
HAVING MAX(PRECO_DE_LISTA) >=20;

--DESAFIO: Verifique as quantidades totais de vendas de cada produto e ordene do maior para o menor.
SELECT CODIGO_DO_PRODUTO, SUM(QUANTIDADE) AS TOT_QUANTIDADE
FROM ITENS_NOTAS_FISCAIS
GROUP BY CODIGO_DO_PRODUTO
ORDER BY TOT_QUANTIDADE DESC;

--DESAFIO: liste somente os produtos que venderam mais que 394000 unidades.
SELECT CODIGO_DO_PRODUTO, SUM(QUANTIDADE) AS TOT_QUANTIDADE
FROM ITENS_NOTAS_FISCAIS
GROUP BY CODIGO_DO_PRODUTO
HAVING SUM(QUANTIDADE) > 394000
ORDER BY TOT_QUANTIDADE DESC;


--CASE | WHEN THEN ELSE | END

SELECT NOME_DO_PRODUTO, PRECO_DE_LISTA FROM TABELA_DE_PRODUTOS
WHERE SABOR = 'MANGA';


SELECT NOME_DO_PRODUTO, PRECO_DE_LISTA,
(CASE WHEN PRECO_DE_LISTA < 7
THEN 'BARATO'
WHEN PRECO_DE_LISTA >= 7 AND PRECO_DE_LISTA < 12
THEN 'EM CONTA'
ELSE 'CARO' END) AS CLASSIFICACAO
FROM TABELA_DE_PRODUTOS
ORDER BY CLASSIFICACAO;

--CONTANDO

SELECT 
(CASE WHEN PRECO_DE_LISTA < 7
THEN 'BARATO'
WHEN PRECO_DE_LISTA >= 7 AND PRECO_DE_LISTA < 12
THEN 'EM CONTA'
ELSE 'CARO' END) AS CLASSIFICACAO, 
COUNT(*) AS CONTAGEM
FROM TABELA_DE_PRODUTOS
GROUP BY (CASE WHEN PRECO_DE_LISTA < 7
THEN 'BARATO'
WHEN PRECO_DE_LISTA >= 7 AND PRECO_DE_LISTA < 12
THEN 'EM CONTA'
ELSE 'CARO' END);